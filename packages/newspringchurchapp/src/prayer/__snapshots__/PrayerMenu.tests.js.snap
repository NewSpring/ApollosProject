// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders prayer menu 1`] = `
<RCTSafeAreaView
  emulateUnlessSupported={true}
  onLayout={[Function]}
  style={
    Object {
      "bottom": 0,
      "left": 0,
      "position": "absolute",
      "right": 0,
      "top": 0,
    }
  }
>
  <View
    onLayout={[Function]}
    style={
      Object {
        "flex": 1,
      }
    }
  />
  <View
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <RCTSafeAreaView
      emulateUnlessSupported={true}
    >
      <View
        style={
          Object {
            "backgroundColor": "#ffffff",
            "borderBottomLeftRadius": 16,
            "flex": 1,
            "paddingHorizontal": 16,
            "paddingVertical": 64,
          }
        }
      >
        <View
          style={
            Object {
              "flex": 1,
              "paddingHorizontal": 16,
              "paddingVertical": 16,
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "stretch",
                "flexDirection": "row",
                "flexWrap": "nowrap",
                "justifyContent": "space-between",
              }
            }
          >
            <Text
              style={
                Object {
                  "color": "#303030",
                  "fontFamily": "Colfax-Black",
                  "fontSize": 24,
                  "lineHeight": 27.6,
                }
              }
            >
              Ask for prayer
            </Text>
            <View
              accessible={true}
              isTVSelectable={true}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
            >
              <View
                bordered={false}
                disabled={false}
                pill={false}
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#dddddd",
                    "borderColor": "#dddddd",
                    "borderRadius": 16,
                    "borderWidth": 2,
                    "elevation": 2,
                    "flexDirection": "row",
                    "height": 32,
                    "justifyContent": "center",
                    "marginBottom": 8,
                    "marginRight": 8,
                    "opacity": 1,
                    "overflow": "hidden",
                    "paddingHorizontal": 4,
                    "paddingVertical": 4,
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "alignItems": "center",
                      "color": "#303030",
                      "fontFamily": "Colfax-Bold",
                      "fontSize": 12,
                      "justifyContent": "center",
                      "lineHeight": 17.28,
                      "paddingHorizontal": 6,
                      "textAlign": "center",
                    }
                  }
                >
                  My Prayers
                </Text>
              </View>
            </View>
          </View>
          <Text
            style={
              Object {
                "color": "#303030",
                "fontFamily": "System",
                "fontSize": 14,
                "fontStyle": null,
                "fontWeight": null,
                "lineHeight": 20.16,
                "paddingVertical": 16,
              }
            }
          >
            Take a moment to send a prayer request that your NewSpring Church family can pray for.
          </Text>
        </View>
        <View
          style={
            Object {
              "flex": 1,
              "padding": 16,
            }
          }
        >
          <View
            accessible={true}
            isTVSelectable={true}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
          >
            <View
              bordered={false}
              disabled={false}
              pill={true}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#6bac43",
                  "borderColor": "#6bac43",
                  "borderRadius": 48,
                  "borderWidth": 2,
                  "elevation": 2,
                  "flexDirection": "row",
                  "height": 48,
                  "justifyContent": "center",
                  "opacity": 1,
                  "overflow": "hidden",
                  "paddingHorizontal": 16,
                }
              }
            >
              <Text
                style={
                  Object {
                    "color": "#ffffff",
                    "fontFamily": "Colfax-Bold",
                    "fontSize": 16,
                    "lineHeight": 23.04,
                  }
                }
              >
                Add a Prayer Request
              </Text>
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "paddingHorizontal": 16,
            "paddingVertical": 16,
          }
        }
      >
        <Text
          style={
            Object {
              "color": "#303030",
              "fontFamily": "Colfax-Black",
              "fontSize": 24,
              "lineHeight": 27.6,
            }
          }
        >
          Pray for Others
        </Text>
      </View>
      <View
        onLayout={[Function]}
        style={
          Array [
            Object {
              "flex": 1,
              "overflow": "hidden",
            },
            undefined,
          ]
        }
      >
        <RCTScrollView
          contentContainerStyle={
            Object {
              "padding": 8,
              "paddingBottom": 0,
            }
          }
          data={Array []}
          decelerationRate="fast"
          disableVirtualization={false}
          getItem={[Function]}
          getItemCount={[Function]}
          horizontal={true}
          initialNumToRender={10}
          initialScrollIndex={0}
          keyExtractor={[Function]}
          loadingStateObject={
            Object {
              "node": Object {
                "id": "fakeId0",
                "isLoading": true,
              },
            }
          }
          maxToRenderPerBatch={10}
          numColumns={1}
          onContentSizeChange={[Function]}
          onEndReachedThreshold={2}
          onLayout={[Function]}
          onMomentumScrollEnd={[Function]}
          onScroll={[Function]}
          onScrollBeginDrag={[Function]}
          onScrollEndDrag={[Function]}
          refreshing={false}
          removeClippedSubviews={false}
          renderItem={[Function]}
          scrollEventThrottle={50}
          showsHorizontalScrollIndicator={false}
          snapToAlignment="start"
          snapToInterval={512}
          stickyHeaderIndices={Array []}
          style={
            Object {
              "paddingLeft": 16,
            }
          }
          updateCellsBatchingPeriod={50}
          viewabilityConfigCallbackPairs={Array []}
          windowSize={21}
        >
          <View />
        </RCTScrollView>
        <View
          activeOffsetX={
            Array [
              -20,
              20,
            ]
          }
          enabled={false}
          failOffsetY={
            Array [
              -20,
              20,
            ]
          }
          onGestureEvent={[Function]}
          onHandlerStateChange={[Function]}
        >
          <View
            removeClippedSubviews={false}
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "transform": Array [
                  Object {
                    "translateX": undefined,
                  },
                ],
                "width": 0,
              }
            }
          />
        </View>
      </View>
    </RCTSafeAreaView>
  </View>
</RCTSafeAreaView>
`;

exports[`renders prayer menu with categories 1`] = `
<RCTSafeAreaView
  emulateUnlessSupported={true}
  onLayout={[Function]}
  style={
    Object {
      "bottom": 0,
      "left": 0,
      "position": "absolute",
      "right": 0,
      "top": 0,
    }
  }
>
  <View
    onLayout={[Function]}
    style={
      Object {
        "flex": 1,
      }
    }
  />
  <View
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <RCTSafeAreaView
      emulateUnlessSupported={true}
    >
      <View
        style={
          Object {
            "backgroundColor": "#ffffff",
            "borderBottomLeftRadius": 16,
            "flex": 1,
            "paddingHorizontal": 16,
            "paddingVertical": 64,
          }
        }
      >
        <View
          style={
            Object {
              "flex": 1,
              "paddingHorizontal": 16,
              "paddingVertical": 16,
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "stretch",
                "flexDirection": "row",
                "flexWrap": "nowrap",
                "justifyContent": "space-between",
              }
            }
          >
            <Text
              style={
                Object {
                  "color": "#303030",
                  "fontFamily": "Colfax-Black",
                  "fontSize": 24,
                  "lineHeight": 27.6,
                }
              }
            >
              Ask for prayer
            </Text>
            <View
              accessible={true}
              isTVSelectable={true}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
            >
              <View
                bordered={false}
                disabled={false}
                pill={false}
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#dddddd",
                    "borderColor": "#dddddd",
                    "borderRadius": 16,
                    "borderWidth": 2,
                    "elevation": 2,
                    "flexDirection": "row",
                    "height": 32,
                    "justifyContent": "center",
                    "marginBottom": 8,
                    "marginRight": 8,
                    "opacity": 1,
                    "overflow": "hidden",
                    "paddingHorizontal": 4,
                    "paddingVertical": 4,
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "alignItems": "center",
                      "color": "#303030",
                      "fontFamily": "Colfax-Bold",
                      "fontSize": 12,
                      "justifyContent": "center",
                      "lineHeight": 17.28,
                      "paddingHorizontal": 6,
                      "textAlign": "center",
                    }
                  }
                >
                  My Prayers
                </Text>
              </View>
            </View>
          </View>
          <Text
            style={
              Object {
                "color": "#303030",
                "fontFamily": "System",
                "fontSize": 14,
                "fontStyle": null,
                "fontWeight": null,
                "lineHeight": 20.16,
                "paddingVertical": 16,
              }
            }
          >
            Take a moment to send a prayer request that your NewSpring Church family can pray for.
          </Text>
        </View>
        <View
          style={
            Object {
              "flex": 1,
              "padding": 16,
            }
          }
        >
          <View
            accessible={true}
            isTVSelectable={true}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
          >
            <View
              bordered={false}
              disabled={false}
              pill={true}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#6bac43",
                  "borderColor": "#6bac43",
                  "borderRadius": 48,
                  "borderWidth": 2,
                  "elevation": 2,
                  "flexDirection": "row",
                  "height": 48,
                  "justifyContent": "center",
                  "opacity": 1,
                  "overflow": "hidden",
                  "paddingHorizontal": 16,
                }
              }
            >
              <Text
                style={
                  Object {
                    "color": "#ffffff",
                    "fontFamily": "Colfax-Bold",
                    "fontSize": 16,
                    "lineHeight": 23.04,
                  }
                }
              >
                Add a Prayer Request
              </Text>
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "paddingHorizontal": 16,
            "paddingVertical": 16,
          }
        }
      >
        <Text
          style={
            Object {
              "color": "#303030",
              "fontFamily": "Colfax-Black",
              "fontSize": 24,
              "lineHeight": 27.6,
            }
          }
        >
          Pray for Others
        </Text>
      </View>
      <View
        onLayout={[Function]}
        style={
          Array [
            Object {
              "flex": 1,
              "overflow": "hidden",
            },
            undefined,
          ]
        }
      >
        <RCTScrollView
          contentContainerStyle={
            Object {
              "padding": 8,
              "paddingBottom": 0,
            }
          }
          data={
            Array [
              Object {
                "description": "this is category 1",
                "id": "cat1",
                "image": "https://picsum.photos/300/300",
                "key": "cat1",
                "overlaycolor": Array [
                  "#fff",
                  "#fff",
                ],
                "title": "category 1",
              },
              Object {
                "description": "this is category 2",
                "id": "cat2",
                "image": "https://picsum.photos/300/300",
                "key": "cat2",
                "overlaycolor": Array [
                  "#fff",
                  "#fff",
                ],
                "title": "category 2",
              },
            ]
          }
          decelerationRate="fast"
          disableVirtualization={false}
          getItem={[Function]}
          getItemCount={[Function]}
          horizontal={true}
          initialNumToRender={10}
          initialScrollIndex={0}
          keyExtractor={[Function]}
          loadingStateObject={
            Object {
              "node": Object {
                "id": "fakeId0",
                "isLoading": true,
              },
            }
          }
          maxToRenderPerBatch={10}
          numColumns={1}
          onContentSizeChange={[Function]}
          onEndReachedThreshold={2}
          onLayout={[Function]}
          onMomentumScrollEnd={[Function]}
          onScroll={[Function]}
          onScrollBeginDrag={[Function]}
          onScrollEndDrag={[Function]}
          refreshing={false}
          removeClippedSubviews={false}
          renderItem={[Function]}
          scrollEventThrottle={50}
          showsHorizontalScrollIndicator={false}
          snapToAlignment="start"
          snapToInterval={512}
          stickyHeaderIndices={Array []}
          style={
            Object {
              "paddingLeft": 16,
            }
          }
          updateCellsBatchingPeriod={50}
          viewabilityConfigCallbackPairs={Array []}
          windowSize={21}
        >
          <View>
            <View
              onLayout={[Function]}
              style={
                Array [
                  Object {
                    "flexDirection": "row",
                  },
                  null,
                ]
              }
            >
              <View
                accessible={true}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "transform": Array [
                      Object {
                        "scale": 1,
                      },
                    ],
                  }
                }
              >
                <View
                  style={
                    Object {
                      "height": 120,
                      "marginBottom": 8,
                      "marginRight": 12,
                      "marginTop": 8,
                      "transform": Array [
                        Object {
                          "scaleX": 0.95,
                        },
                        Object {
                          "scaleY": 1,
                        },
                      ],
                    }
                  }
                  transform={
                    Array [
                      Object {
                        "scaleX": 0.95,
                      },
                      Object {
                        "scaleY": 1,
                      },
                    ]
                  }
                >
                  <View
                    style={
                      Object {
                        "aspectRatio": 1,
                        "borderRadius": 16,
                        "height": "100%",
                        "overflow": "hidden",
                        "width": "100%",
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "aspectRatio": 1,
                          "backgroundColor": "#dddddd",
                          "overflow": "hidden",
                          "width": "100%",
                        }
                      }
                    >
                      <View
                        animate={null}
                        customAnimate={null}
                        onReady={false}
                        style={
                          Object {
                            "aspectRatio": 1,
                            "backgroundColor": "#dddddd",
                            "width": "100%",
                          }
                        }
                      >
                        <Image
                          onLoad={[Function]}
                          source={
                            Array [
                              Object {
                                "cache": "force-cache",
                                "uri": "https://picsum.photos/300/300",
                                "url": "https://picsum.photos/300/300",
                              },
                            ]
                          }
                          style={
                            Object {
                              "aspectRatio": 1,
                              "backgroundColor": "#dddddd",
                              "opacity": 0,
                              "resizeMode": "cover",
                              "width": "100%",
                            }
                          }
                        />
                      </View>
                      <BVLinearGradient
                        colors={
                          Array [
                            3439329279,
                            3439329279,
                          ]
                        }
                        endPoint={
                          Object {
                            "x": 0,
                            "y": 1,
                          }
                        }
                        locations={
                          Array [
                            0.5,
                            1,
                          ]
                        }
                        startPoint={
                          Object {
                            "x": 0,
                            "y": 0,
                          }
                        }
                        style={
                          Object {
                            "bottom": 0,
                            "left": 0,
                            "position": "absolute",
                            "right": 0,
                            "top": 0,
                          }
                        }
                      />
                    </View>
                    <Text
                      style={
                        Object {
                          "backgroundColor": "transparent",
                          "bottom": 16,
                          "color": "#ffffff",
                          "fontFamily": "Colfax-Medium",
                          "fontSize": 14,
                          "left": 16,
                          "lineHeight": 20.16,
                          "position": "absolute",
                          "right": 16,
                        }
                      }
                    >
                      category 1
                    </Text>
                  </View>
                </View>
              </View>
            </View>
            <View
              onLayout={[Function]}
              style={
                Array [
                  Object {
                    "flexDirection": "row",
                  },
                  null,
                ]
              }
            >
              <View
                accessible={true}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "transform": Array [
                      Object {
                        "scale": 1,
                      },
                    ],
                  }
                }
              >
                <View
                  style={
                    Object {
                      "height": 120,
                      "marginBottom": 8,
                      "marginRight": 12,
                      "marginTop": 8,
                      "transform": Array [
                        Object {
                          "scaleX": 0.95,
                        },
                        Object {
                          "scaleY": 1,
                        },
                      ],
                    }
                  }
                  transform={
                    Array [
                      Object {
                        "scaleX": 0.95,
                      },
                      Object {
                        "scaleY": 1,
                      },
                    ]
                  }
                >
                  <View
                    style={
                      Object {
                        "aspectRatio": 1,
                        "borderRadius": 16,
                        "height": "100%",
                        "overflow": "hidden",
                        "width": "100%",
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "aspectRatio": 1,
                          "backgroundColor": "#dddddd",
                          "overflow": "hidden",
                          "width": "100%",
                        }
                      }
                    >
                      <View
                        animate={null}
                        customAnimate={null}
                        onReady={false}
                        style={
                          Object {
                            "aspectRatio": 1,
                            "backgroundColor": "#dddddd",
                            "width": "100%",
                          }
                        }
                      >
                        <Image
                          onLoad={[Function]}
                          source={
                            Array [
                              Object {
                                "cache": "force-cache",
                                "uri": "https://picsum.photos/300/300",
                                "url": "https://picsum.photos/300/300",
                              },
                            ]
                          }
                          style={
                            Object {
                              "aspectRatio": 1,
                              "backgroundColor": "#dddddd",
                              "opacity": 0,
                              "resizeMode": "cover",
                              "width": "100%",
                            }
                          }
                        />
                      </View>
                      <BVLinearGradient
                        colors={
                          Array [
                            3439329279,
                            3439329279,
                          ]
                        }
                        endPoint={
                          Object {
                            "x": 0,
                            "y": 1,
                          }
                        }
                        locations={
                          Array [
                            0.5,
                            1,
                          ]
                        }
                        startPoint={
                          Object {
                            "x": 0,
                            "y": 0,
                          }
                        }
                        style={
                          Object {
                            "bottom": 0,
                            "left": 0,
                            "position": "absolute",
                            "right": 0,
                            "top": 0,
                          }
                        }
                      />
                    </View>
                    <Text
                      style={
                        Object {
                          "backgroundColor": "transparent",
                          "bottom": 16,
                          "color": "#ffffff",
                          "fontFamily": "Colfax-Medium",
                          "fontSize": 14,
                          "left": 16,
                          "lineHeight": 20.16,
                          "position": "absolute",
                          "right": 16,
                        }
                      }
                    >
                      category 2
                    </Text>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RCTScrollView>
        <View
          activeOffsetX={
            Array [
              -20,
              20,
            ]
          }
          enabled={false}
          failOffsetY={
            Array [
              -20,
              20,
            ]
          }
          onGestureEvent={[Function]}
          onHandlerStateChange={[Function]}
        >
          <View
            removeClippedSubviews={false}
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "transform": Array [
                  Object {
                    "translateX": undefined,
                  },
                ],
                "width": 1500,
              }
            }
          >
            <View
              accessibilityElementsHidden={false}
              importantForAccessibility="auto"
              style={
                Array [
                  Object {
                    "flex": 1,
                    "overflow": "hidden",
                  },
                  Object {
                    "width": 750,
                  },
                  undefined,
                ]
              }
            >
              <View
                style={
                  Object {
                    "marginTop": 16,
                    "paddingHorizontal": 16,
                    "paddingVertical": 16,
                  }
                }
              >
                <Text
                  bold={false}
                  italic={false}
                  style={
                    Object {
                      "color": "#303030",
                      "fontFamily": "Colfax-Regular",
                      "fontSize": 16,
                      "lineHeight": 26,
                    }
                  }
                >
                  this is category 1
                </Text>
              </View>
            </View>
            <View
              accessibilityElementsHidden={true}
              importantForAccessibility="no-hide-descendants"
              style={
                Array [
                  Object {
                    "flex": 1,
                    "overflow": "hidden",
                  },
                  Object {
                    "width": 750,
                  },
                  undefined,
                ]
              }
            />
          </View>
        </View>
      </View>
    </RCTSafeAreaView>
  </View>
</RCTSafeAreaView>
`;
