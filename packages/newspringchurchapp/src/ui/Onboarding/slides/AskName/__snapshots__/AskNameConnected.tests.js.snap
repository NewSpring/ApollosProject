// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`The AskNameConnected component renders User Name when logged in 1`] = `
<RCTSafeAreaView
  emulateUnlessSupported={true}
  onLayout={[Function]}
  style={
    Object {
      "bottom": 0,
      "left": 0,
      "position": "absolute",
      "right": 0,
      "top": 0,
    }
  }
>
  <View
    onLayout={[Function]}
    style={
      Object {
        "flex": 1,
      }
    }
  />
  <View
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <RCTScrollView
      contentContainerStyle={
        Object {
          "minHeight": "100%",
        }
      }
      overScrollMode="auto"
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <View>
        <RCTSafeAreaView
          emulateUnlessSupported={true}
          forceInset={
            Object {
              "bottom": "always",
              "top": "always",
            }
          }
        >
          <RCTSafeAreaView
            emulateUnlessSupported={true}
            forceInset={
              Object {
                "bottom": "always",
              }
            }
            style={
              Object {
                "marginBottom": 48,
                "paddingHorizontal": 16,
                "paddingTop": 16,
              }
            }
          >
            <View>
              <View
                style={
                  Object {
                    "paddingBottom": 16,
                  }
                }
              >
                <RNSVGSvgView
                  align="xMidYMid"
                  bbHeight={96}
                  bbWidth={96}
                  height={96}
                  icon={true}
                  meetOrSlice={0}
                  minX={0}
                  minY={0}
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "borderWidth": 0,
                      },
                      undefined,
                      null,
                      Object {
                        "flex": 0,
                        "height": 96,
                        "width": 96,
                      },
                    ]
                  }
                  vbHeight={24}
                  vbWidth={24}
                  width={96}
                >
                  <RNSVGGroup
                    fill={
                      Array [
                        0,
                        4278190080,
                      ]
                    }
                    fillOpacity={1}
                    fillRule={1}
                    font={Object {}}
                    matrix={
                      Array [
                        1,
                        0,
                        0,
                        1,
                        0,
                        0,
                      ]
                    }
                    opacity={1}
                    originX={0}
                    originY={0}
                    propList={
                      Array [
                        "fill",
                        "fillOpacity",
                        "fillRule",
                        "stroke",
                        "strokeWidth",
                        "strokeOpacity",
                        "strokeDasharray",
                        "strokeDashoffset",
                        "strokeLinecap",
                        "strokeLinejoin",
                        "strokeMiterlimit",
                      ]
                    }
                    rotation={0}
                    scaleX={1}
                    scaleY={1}
                    skewX={0}
                    skewY={0}
                    stroke={null}
                    strokeDasharray={null}
                    strokeDashoffset={null}
                    strokeLinecap={0}
                    strokeLinejoin={0}
                    strokeMiterlimit={4}
                    strokeOpacity={1}
                    strokeWidth={1}
                    x={0}
                    y={0}
                  >
                    <RNSVGPath
                      d="M12 22C5.2 22 2 17.52 2 12S6.48 2 12 2s10 3.33 10 10v10H12zM7.84 8v9.08h3.12V12.3c0-1.14.6-1.8 1.63-1.8.53 0 1.03.27 1.23.68.17.33.2.5.2 1.4v4.5h3.1v-5.65c0-1.2-.2-1.82-.8-2.45C15.7 8.33 14.86 8 13.8 8H7.84z"
                      fill={
                        Array [
                          0,
                          4285246531,
                        ]
                      }
                      fillOpacity={1}
                      fillRule={1}
                      matrix={
                        Array [
                          1,
                          0,
                          0,
                          1,
                          0,
                          0,
                        ]
                      }
                      opacity={1}
                      originX={0}
                      originY={0}
                      propList={
                        Array [
                          "fill",
                        ]
                      }
                      rotation={0}
                      scaleX={1}
                      scaleY={1}
                      skewX={0}
                      skewY={0}
                      stroke={null}
                      strokeDasharray={null}
                      strokeDashoffset={null}
                      strokeLinecap={0}
                      strokeLinejoin={0}
                      strokeMiterlimit={4}
                      strokeOpacity={1}
                      strokeWidth={1}
                      x={0}
                      y={0}
                    />
                  </RNSVGGroup>
                </RNSVGSvgView>
              </View>
              <View
                style={
                  Object {
                    "paddingBottom": 8,
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "color": "#6bac43",
                      "fontFamily": "Colfax-Black",
                      "fontSize": 36,
                      "lineHeight": 41.4,
                    }
                  }
                >
                  Welcome!
                </Text>
              </View>
              <Text
                style={
                  Object {
                    "color": "#505050",
                    "fontFamily": "Colfax-Medium",
                    "fontSize": 14,
                    "lineHeight": 20.16,
                  }
                }
              >
                Every relationship starts with a name. What's yours?
              </Text>
            </View>
            <View
              horizontal={false}
              style={
                Object {
                  "paddingHorizontal": 0,
                  "paddingVertical": 16,
                }
              }
            >
              <View
                disabled={false}
                style={
                  Object {
                    "marginVertical": 16,
                  }
                }
              >
                <View>
                  <View
                    style={
                      Object {
                        "flexDirection": "row",
                        "justifyContent": "center",
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "alignItems": "center",
                          "justifyContent": "center",
                        }
                      }
                    />
                    <View
                      style={
                        Object {
                          "flex": 1,
                          "opacity": 1,
                        }
                      }
                    >
                      <TextInput
                        allowFontScaling={true}
                        editable={true}
                        enablesReturnKeyAutomatically={true}
                        onBlur={[Function]}
                        onChangeText={[Function]}
                        onFocus={[Function]}
                        onSubmitEditing={[Function]}
                        placeholderTextColor="rgba(48, 48, 48, 0.6)"
                        returnKeyType="next"
                        style={
                          Object {
                            "color": "#303030",
                            "fontFamily": "Colfax-Bold",
                            "fontSize": 14,
                            "height": 38,
                            "paddingVertical": 0,
                          }
                        }
                        textContentType="givenName"
                        type="text"
                        underlineColorAndroid="transparent"
                        value="Isaac"
                      />
                    </View>
                    <View
                      style={
                        Object {
                          "alignItems": "center",
                          "justifyContent": "center",
                        }
                      }
                    />
                  </View>
                  <View
                    onLayout={[Function]}
                    pointerEvents="none"
                    style={
                      Object {
                        "bottom": 0,
                        "justifyContent": "center",
                        "opacity": 0.8,
                        "position": "absolute",
                        "top": 0,
                        "transform": Array [
                          Object {
                            "scale": 0.8,
                          },
                          Object {
                            "translateX": 0,
                          },
                          Object {
                            "translateY": 0,
                          },
                        ],
                      }
                    }
                  >
                    <Text
                      style={
                        Object {
                          "backgroundColor": "transparent",
                          "color": "#505050",
                          "fontFamily": "Colfax-Bold",
                          "fontSize": 12,
                          "lineHeight": 17.28,
                          "paddingVertical": 4,
                        }
                      }
                    >
                      First Name
                    </Text>
                  </View>
                  <View
                    style={
                      Object {
                        "bottom": 0,
                        "left": 0,
                        "right": 0,
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "backgroundColor": "#dddddd",
                          "bottom": -0.5,
                          "height": 0.5,
                        }
                      }
                    />
                    <View
                      style={
                        Object {
                          "bottom": 0,
                          "left": 0,
                          "right": 0,
                          "transform": Array [
                            Object {
                              "scaleX": 1,
                            },
                          ],
                        }
                      }
                    >
                      <View
                        hasError={false}
                        style={
                          Object {
                            "backgroundColor": "#6bac43",
                            "bottom": 0,
                            "height": 0.5,
                          }
                        }
                      />
                    </View>
                  </View>
                </View>
              </View>
              <View
                disabled={false}
                style={
                  Object {
                    "marginVertical": 16,
                  }
                }
              >
                <View>
                  <View
                    style={
                      Object {
                        "flexDirection": "row",
                        "justifyContent": "center",
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "alignItems": "center",
                          "justifyContent": "center",
                        }
                      }
                    />
                    <View
                      style={
                        Object {
                          "flex": 1,
                          "opacity": 1,
                        }
                      }
                    >
                      <TextInput
                        allowFontScaling={true}
                        editable={true}
                        enablesReturnKeyAutomatically={true}
                        onBlur={[Function]}
                        onChangeText={[Function]}
                        onFocus={[Function]}
                        onSubmitEditing={[Function]}
                        placeholderTextColor="rgba(48, 48, 48, 0.6)"
                        returnKeyType="next"
                        style={
                          Object {
                            "color": "#303030",
                            "fontFamily": "Colfax-Bold",
                            "fontSize": 14,
                            "height": 38,
                            "paddingVertical": 0,
                          }
                        }
                        textContentType="familyName"
                        type="text"
                        underlineColorAndroid="transparent"
                        value="Hardy"
                      />
                    </View>
                    <View
                      style={
                        Object {
                          "alignItems": "center",
                          "justifyContent": "center",
                        }
                      }
                    />
                  </View>
                  <View
                    onLayout={[Function]}
                    pointerEvents="none"
                    style={
                      Object {
                        "bottom": 0,
                        "justifyContent": "center",
                        "opacity": 0.8,
                        "position": "absolute",
                        "top": 0,
                        "transform": Array [
                          Object {
                            "scale": 0.8,
                          },
                          Object {
                            "translateX": 0,
                          },
                          Object {
                            "translateY": 0,
                          },
                        ],
                      }
                    }
                  >
                    <Text
                      style={
                        Object {
                          "backgroundColor": "transparent",
                          "color": "#505050",
                          "fontFamily": "Colfax-Bold",
                          "fontSize": 12,
                          "lineHeight": 17.28,
                          "paddingVertical": 4,
                        }
                      }
                    >
                      Last Name
                    </Text>
                  </View>
                  <View
                    style={
                      Object {
                        "bottom": 0,
                        "left": 0,
                        "right": 0,
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "backgroundColor": "#dddddd",
                          "bottom": -0.5,
                          "height": 0.5,
                        }
                      }
                    />
                    <View
                      style={
                        Object {
                          "bottom": 0,
                          "left": 0,
                          "right": 0,
                          "transform": Array [
                            Object {
                              "scaleX": 1,
                            },
                          ],
                        }
                      }
                    >
                      <View
                        hasError={false}
                        style={
                          Object {
                            "backgroundColor": "#6bac43",
                            "bottom": 0,
                            "height": 0.5,
                          }
                        }
                      />
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </RCTSafeAreaView>
        </RCTSafeAreaView>
      </View>
    </RCTScrollView>
    <View
      style={
        Object {
          "alignItems": "center",
          "bottom": 0,
          "flexDirection": "row-reverse",
          "justifyContent": "space-between",
          "left": 0,
          "marginVertical": 8,
          "paddingHorizontal": 16,
          "paddingVertical": 0,
          "position": "absolute",
          "right": 0,
        }
      }
      vertical={false}
    >
      <RCTSafeAreaView
        emulateUnlessSupported={true}
        forceInset={
          Object {
            "bottom": "always",
            "top": "never",
          }
        }
      >
        <View
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
        >
          <View
            bordered={false}
            disabled={false}
            pill={true}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#6bac43",
                "borderColor": "#6bac43",
                "borderRadius": 48,
                "borderWidth": 2,
                "elevation": 2,
                "flexDirection": "row",
                "height": 48,
                "justifyContent": "center",
                "opacity": 1,
                "overflow": "hidden",
                "paddingHorizontal": 16,
              }
            }
          >
            <Text
              style={
                Object {
                  "color": "#ffffff",
                  "fontFamily": "Colfax-Medium",
                  "fontSize": 14,
                  "lineHeight": 20.16,
                }
              }
            >
              Next
            </Text>
            <RNSVGSvgView
              align="xMidYMid"
              bbHeight={20}
              bbWidth={20}
              height={20}
              meetOrSlice={0}
              minX={0}
              minY={0}
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "borderWidth": 0,
                  },
                  Object {
                    "marginLeft": 8,
                    "marginRight": -8,
                  },
                  null,
                  Object {
                    "flex": 0,
                    "height": 20,
                    "width": 20,
                  },
                ]
              }
              vbHeight={24}
              vbWidth={24}
              width={20}
            >
              <RNSVGGroup
                fill={
                  Array [
                    0,
                    4278190080,
                  ]
                }
                fillOpacity={1}
                fillRule={1}
                font={Object {}}
                matrix={
                  Array [
                    1,
                    0,
                    0,
                    1,
                    0,
                    0,
                  ]
                }
                opacity={1}
                originX={0}
                originY={0}
                propList={
                  Array [
                    "fill",
                    "fillOpacity",
                    "fillRule",
                    "stroke",
                    "strokeWidth",
                    "strokeOpacity",
                    "strokeDasharray",
                    "strokeDashoffset",
                    "strokeLinecap",
                    "strokeLinejoin",
                    "strokeMiterlimit",
                  ]
                }
                rotation={0}
                scaleX={1}
                scaleY={1}
                skewX={0}
                skewY={0}
                stroke={null}
                strokeDasharray={null}
                strokeDashoffset={null}
                strokeLinecap={0}
                strokeLinejoin={0}
                strokeMiterlimit={4}
                strokeOpacity={1}
                strokeWidth={1}
                x={0}
                y={0}
              >
                <RNSVGPath
                  d="M9.65 21L8 20.1l7.72-8.1L8 3.9 9.65 3l8.16 8.54c.27.28.27.64 0 .92L9.67 21z"
                  fill={
                    Array [
                      0,
                      4294967295,
                    ]
                  }
                  fillOpacity={1}
                  fillRule={1}
                  matrix={
                    Array [
                      1,
                      0,
                      0,
                      1,
                      0,
                      0,
                    ]
                  }
                  opacity={1}
                  originX={0}
                  originY={0}
                  propList={
                    Array [
                      "fill",
                    ]
                  }
                  rotation={0}
                  scaleX={1}
                  scaleY={1}
                  skewX={0}
                  skewY={0}
                  stroke={null}
                  strokeDasharray={null}
                  strokeDashoffset={null}
                  strokeLinecap={0}
                  strokeLinejoin={0}
                  strokeMiterlimit={4}
                  strokeOpacity={1}
                  strokeWidth={1}
                  x={0}
                  y={0}
                />
              </RNSVGGroup>
            </RNSVGSvgView>
          </View>
        </View>
      </RCTSafeAreaView>
    </View>
  </View>
</RCTSafeAreaView>
`;

exports[`The AskNameConnected component renders in a default state 1`] = `
<RCTSafeAreaView
  emulateUnlessSupported={true}
  onLayout={[Function]}
  style={
    Object {
      "bottom": 0,
      "left": 0,
      "position": "absolute",
      "right": 0,
      "top": 0,
    }
  }
>
  <View
    onLayout={[Function]}
    style={
      Object {
        "flex": 1,
      }
    }
  />
  <View
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <RCTScrollView
      contentContainerStyle={
        Object {
          "minHeight": "100%",
        }
      }
      overScrollMode="auto"
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <View>
        <RCTSafeAreaView
          emulateUnlessSupported={true}
          forceInset={
            Object {
              "bottom": "always",
              "top": "always",
            }
          }
        >
          <RCTSafeAreaView
            emulateUnlessSupported={true}
            forceInset={
              Object {
                "bottom": "always",
              }
            }
            style={
              Object {
                "marginBottom": 48,
                "paddingHorizontal": 16,
                "paddingTop": 16,
              }
            }
          >
            <View>
              <View
                style={
                  Object {
                    "paddingBottom": 16,
                  }
                }
              >
                <RNSVGSvgView
                  align="xMidYMid"
                  bbHeight={96}
                  bbWidth={96}
                  height={96}
                  icon={true}
                  meetOrSlice={0}
                  minX={0}
                  minY={0}
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "borderWidth": 0,
                      },
                      undefined,
                      null,
                      Object {
                        "flex": 0,
                        "height": 96,
                        "width": 96,
                      },
                    ]
                  }
                  vbHeight={24}
                  vbWidth={24}
                  width={96}
                >
                  <RNSVGGroup
                    fill={
                      Array [
                        0,
                        4278190080,
                      ]
                    }
                    fillOpacity={1}
                    fillRule={1}
                    font={Object {}}
                    matrix={
                      Array [
                        1,
                        0,
                        0,
                        1,
                        0,
                        0,
                      ]
                    }
                    opacity={1}
                    originX={0}
                    originY={0}
                    propList={
                      Array [
                        "fill",
                        "fillOpacity",
                        "fillRule",
                        "stroke",
                        "strokeWidth",
                        "strokeOpacity",
                        "strokeDasharray",
                        "strokeDashoffset",
                        "strokeLinecap",
                        "strokeLinejoin",
                        "strokeMiterlimit",
                      ]
                    }
                    rotation={0}
                    scaleX={1}
                    scaleY={1}
                    skewX={0}
                    skewY={0}
                    stroke={null}
                    strokeDasharray={null}
                    strokeDashoffset={null}
                    strokeLinecap={0}
                    strokeLinejoin={0}
                    strokeMiterlimit={4}
                    strokeOpacity={1}
                    strokeWidth={1}
                    x={0}
                    y={0}
                  >
                    <RNSVGPath
                      d="M12 22C5.2 22 2 17.52 2 12S6.48 2 12 2s10 3.33 10 10v10H12zM7.84 8v9.08h3.12V12.3c0-1.14.6-1.8 1.63-1.8.53 0 1.03.27 1.23.68.17.33.2.5.2 1.4v4.5h3.1v-5.65c0-1.2-.2-1.82-.8-2.45C15.7 8.33 14.86 8 13.8 8H7.84z"
                      fill={
                        Array [
                          0,
                          4285246531,
                        ]
                      }
                      fillOpacity={1}
                      fillRule={1}
                      matrix={
                        Array [
                          1,
                          0,
                          0,
                          1,
                          0,
                          0,
                        ]
                      }
                      opacity={1}
                      originX={0}
                      originY={0}
                      propList={
                        Array [
                          "fill",
                        ]
                      }
                      rotation={0}
                      scaleX={1}
                      scaleY={1}
                      skewX={0}
                      skewY={0}
                      stroke={null}
                      strokeDasharray={null}
                      strokeDashoffset={null}
                      strokeLinecap={0}
                      strokeLinejoin={0}
                      strokeMiterlimit={4}
                      strokeOpacity={1}
                      strokeWidth={1}
                      x={0}
                      y={0}
                    />
                  </RNSVGGroup>
                </RNSVGSvgView>
              </View>
              <View
                style={
                  Object {
                    "paddingBottom": 8,
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "color": "#6bac43",
                      "fontFamily": "Colfax-Black",
                      "fontSize": 36,
                      "lineHeight": 41.4,
                    }
                  }
                >
                  Welcome!
                </Text>
              </View>
              <Text
                style={
                  Object {
                    "color": "#505050",
                    "fontFamily": "Colfax-Medium",
                    "fontSize": 14,
                    "lineHeight": 20.16,
                  }
                }
              >
                Every relationship starts with a name. What's yours?
              </Text>
            </View>
            <View
              horizontal={false}
              style={
                Object {
                  "paddingHorizontal": 0,
                  "paddingVertical": 16,
                }
              }
            >
              <View
                disabled={true}
                style={
                  Object {
                    "marginVertical": 16,
                    "opacity": 0.5,
                  }
                }
              >
                <View>
                  <View
                    style={
                      Object {
                        "flexDirection": "row",
                        "justifyContent": "center",
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "alignItems": "center",
                          "justifyContent": "center",
                        }
                      }
                    />
                    <View
                      style={
                        Object {
                          "flex": 1,
                          "opacity": 0,
                        }
                      }
                    >
                      <TextInput
                        allowFontScaling={true}
                        editable={false}
                        enablesReturnKeyAutomatically={true}
                        onBlur={[Function]}
                        onChangeText={[Function]}
                        onFocus={[Function]}
                        onSubmitEditing={[Function]}
                        placeholderTextColor="rgba(48, 48, 48, 0.6)"
                        returnKeyType="next"
                        style={
                          Object {
                            "color": "#303030",
                            "fontFamily": "Colfax-Bold",
                            "fontSize": 14,
                            "height": 38,
                            "paddingVertical": 0,
                          }
                        }
                        textContentType="givenName"
                        type="text"
                        underlineColorAndroid="transparent"
                      />
                    </View>
                    <View
                      style={
                        Object {
                          "alignItems": "center",
                          "justifyContent": "center",
                        }
                      }
                    />
                  </View>
                  <View
                    onLayout={[Function]}
                    pointerEvents="none"
                    style={
                      Object {
                        "bottom": 0,
                        "justifyContent": "center",
                        "opacity": 1,
                        "position": "absolute",
                        "top": 0,
                        "transform": Array [
                          Object {
                            "scale": 1,
                          },
                          Object {
                            "translateX": 0,
                          },
                          Object {
                            "translateY": 0,
                          },
                        ],
                      }
                    }
                  >
                    <Text
                      style={
                        Object {
                          "backgroundColor": "transparent",
                          "color": "#505050",
                          "fontFamily": "Colfax-Bold",
                          "fontSize": 12,
                          "lineHeight": 17.28,
                          "paddingVertical": 4,
                        }
                      }
                    >
                      First Name
                    </Text>
                  </View>
                  <View
                    style={
                      Object {
                        "bottom": 0,
                        "left": 0,
                        "right": 0,
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "backgroundColor": "#dddddd",
                          "bottom": -0.5,
                          "height": 0.5,
                        }
                      }
                    />
                    <View
                      style={
                        Object {
                          "bottom": 0,
                          "left": 0,
                          "right": 0,
                          "transform": Array [
                            Object {
                              "scaleX": 0.0001,
                            },
                          ],
                        }
                      }
                    >
                      <View
                        hasError={false}
                        style={
                          Object {
                            "backgroundColor": "#6bac43",
                            "bottom": 0,
                            "height": 0.5,
                          }
                        }
                      />
                    </View>
                  </View>
                </View>
              </View>
              <View
                disabled={true}
                style={
                  Object {
                    "marginVertical": 16,
                    "opacity": 0.5,
                  }
                }
              >
                <View>
                  <View
                    style={
                      Object {
                        "flexDirection": "row",
                        "justifyContent": "center",
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "alignItems": "center",
                          "justifyContent": "center",
                        }
                      }
                    />
                    <View
                      style={
                        Object {
                          "flex": 1,
                          "opacity": 0,
                        }
                      }
                    >
                      <TextInput
                        allowFontScaling={true}
                        editable={false}
                        enablesReturnKeyAutomatically={true}
                        onBlur={[Function]}
                        onChangeText={[Function]}
                        onFocus={[Function]}
                        onSubmitEditing={[Function]}
                        placeholderTextColor="rgba(48, 48, 48, 0.6)"
                        returnKeyType="next"
                        style={
                          Object {
                            "color": "#303030",
                            "fontFamily": "Colfax-Bold",
                            "fontSize": 14,
                            "height": 38,
                            "paddingVertical": 0,
                          }
                        }
                        textContentType="familyName"
                        type="text"
                        underlineColorAndroid="transparent"
                      />
                    </View>
                    <View
                      style={
                        Object {
                          "alignItems": "center",
                          "justifyContent": "center",
                        }
                      }
                    />
                  </View>
                  <View
                    onLayout={[Function]}
                    pointerEvents="none"
                    style={
                      Object {
                        "bottom": 0,
                        "justifyContent": "center",
                        "opacity": 1,
                        "position": "absolute",
                        "top": 0,
                        "transform": Array [
                          Object {
                            "scale": 1,
                          },
                          Object {
                            "translateX": 0,
                          },
                          Object {
                            "translateY": 0,
                          },
                        ],
                      }
                    }
                  >
                    <Text
                      style={
                        Object {
                          "backgroundColor": "transparent",
                          "color": "#505050",
                          "fontFamily": "Colfax-Bold",
                          "fontSize": 12,
                          "lineHeight": 17.28,
                          "paddingVertical": 4,
                        }
                      }
                    >
                      Last Name
                    </Text>
                  </View>
                  <View
                    style={
                      Object {
                        "bottom": 0,
                        "left": 0,
                        "right": 0,
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "backgroundColor": "#dddddd",
                          "bottom": -0.5,
                          "height": 0.5,
                        }
                      }
                    />
                    <View
                      style={
                        Object {
                          "bottom": 0,
                          "left": 0,
                          "right": 0,
                          "transform": Array [
                            Object {
                              "scaleX": 0.0001,
                            },
                          ],
                        }
                      }
                    >
                      <View
                        hasError={false}
                        style={
                          Object {
                            "backgroundColor": "#6bac43",
                            "bottom": 0,
                            "height": 0.5,
                          }
                        }
                      />
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </RCTSafeAreaView>
        </RCTSafeAreaView>
      </View>
    </RCTScrollView>
    <View
      style={
        Object {
          "alignItems": "center",
          "bottom": 0,
          "flexDirection": "row-reverse",
          "justifyContent": "space-between",
          "left": 0,
          "marginVertical": 8,
          "paddingHorizontal": 16,
          "paddingVertical": 0,
          "position": "absolute",
          "right": 0,
        }
      }
      vertical={false}
    >
      <RCTSafeAreaView
        emulateUnlessSupported={true}
        forceInset={
          Object {
            "bottom": "always",
            "top": "never",
          }
        }
      >
        <View
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
        >
          <View
            bordered={false}
            disabled={false}
            pill={true}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#6bac43",
                "borderColor": "#6bac43",
                "borderRadius": 48,
                "borderWidth": 2,
                "elevation": 2,
                "flexDirection": "row",
                "height": 48,
                "justifyContent": "center",
                "opacity": 1,
                "overflow": "hidden",
                "paddingHorizontal": 16,
              }
            }
          >
            <ActivityIndicator
              animating={true}
              color="#ffffff"
              hidesWhenStopped={true}
              size="small"
            />
          </View>
        </View>
        <Text
          onPress={[MockFunction]}
          style={
            Object {
              "color": "#858585",
              "marginLeft": -16,
              "paddingHorizontal": 16,
              "paddingVertical": 15,
            }
          }
        >
          Skip
        </Text>
      </RCTSafeAreaView>
    </View>
  </View>
</RCTSafeAreaView>
`;

exports[`The AskNameConnected component renders loading state when fetching data 1`] = `
<RCTSafeAreaView
  emulateUnlessSupported={true}
  onLayout={[Function]}
  style={
    Object {
      "bottom": 0,
      "left": 0,
      "position": "absolute",
      "right": 0,
      "top": 0,
    }
  }
>
  <View
    onLayout={[Function]}
    style={
      Object {
        "flex": 1,
      }
    }
  />
  <View
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <RCTScrollView
      contentContainerStyle={
        Object {
          "minHeight": "100%",
        }
      }
      overScrollMode="auto"
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <View>
        <RCTSafeAreaView
          emulateUnlessSupported={true}
          forceInset={
            Object {
              "bottom": "always",
              "top": "always",
            }
          }
        >
          <RCTSafeAreaView
            emulateUnlessSupported={true}
            forceInset={
              Object {
                "bottom": "always",
              }
            }
            style={
              Object {
                "marginBottom": 48,
                "paddingHorizontal": 16,
                "paddingTop": 16,
              }
            }
          >
            <View>
              <View
                style={
                  Object {
                    "paddingBottom": 16,
                  }
                }
              >
                <RNSVGSvgView
                  align="xMidYMid"
                  bbHeight={96}
                  bbWidth={96}
                  height={96}
                  icon={true}
                  meetOrSlice={0}
                  minX={0}
                  minY={0}
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "borderWidth": 0,
                      },
                      undefined,
                      null,
                      Object {
                        "flex": 0,
                        "height": 96,
                        "width": 96,
                      },
                    ]
                  }
                  vbHeight={24}
                  vbWidth={24}
                  width={96}
                >
                  <RNSVGGroup
                    fill={
                      Array [
                        0,
                        4278190080,
                      ]
                    }
                    fillOpacity={1}
                    fillRule={1}
                    font={Object {}}
                    matrix={
                      Array [
                        1,
                        0,
                        0,
                        1,
                        0,
                        0,
                      ]
                    }
                    opacity={1}
                    originX={0}
                    originY={0}
                    propList={
                      Array [
                        "fill",
                        "fillOpacity",
                        "fillRule",
                        "stroke",
                        "strokeWidth",
                        "strokeOpacity",
                        "strokeDasharray",
                        "strokeDashoffset",
                        "strokeLinecap",
                        "strokeLinejoin",
                        "strokeMiterlimit",
                      ]
                    }
                    rotation={0}
                    scaleX={1}
                    scaleY={1}
                    skewX={0}
                    skewY={0}
                    stroke={null}
                    strokeDasharray={null}
                    strokeDashoffset={null}
                    strokeLinecap={0}
                    strokeLinejoin={0}
                    strokeMiterlimit={4}
                    strokeOpacity={1}
                    strokeWidth={1}
                    x={0}
                    y={0}
                  >
                    <RNSVGPath
                      d="M12 22C5.2 22 2 17.52 2 12S6.48 2 12 2s10 3.33 10 10v10H12zM7.84 8v9.08h3.12V12.3c0-1.14.6-1.8 1.63-1.8.53 0 1.03.27 1.23.68.17.33.2.5.2 1.4v4.5h3.1v-5.65c0-1.2-.2-1.82-.8-2.45C15.7 8.33 14.86 8 13.8 8H7.84z"
                      fill={
                        Array [
                          0,
                          4285246531,
                        ]
                      }
                      fillOpacity={1}
                      fillRule={1}
                      matrix={
                        Array [
                          1,
                          0,
                          0,
                          1,
                          0,
                          0,
                        ]
                      }
                      opacity={1}
                      originX={0}
                      originY={0}
                      propList={
                        Array [
                          "fill",
                        ]
                      }
                      rotation={0}
                      scaleX={1}
                      scaleY={1}
                      skewX={0}
                      skewY={0}
                      stroke={null}
                      strokeDasharray={null}
                      strokeDashoffset={null}
                      strokeLinecap={0}
                      strokeLinejoin={0}
                      strokeMiterlimit={4}
                      strokeOpacity={1}
                      strokeWidth={1}
                      x={0}
                      y={0}
                    />
                  </RNSVGGroup>
                </RNSVGSvgView>
              </View>
              <View
                style={
                  Object {
                    "paddingBottom": 8,
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "color": "#6bac43",
                      "fontFamily": "Colfax-Black",
                      "fontSize": 36,
                      "lineHeight": 41.4,
                    }
                  }
                >
                  Welcome!
                </Text>
              </View>
              <Text
                style={
                  Object {
                    "color": "#505050",
                    "fontFamily": "Colfax-Medium",
                    "fontSize": 14,
                    "lineHeight": 20.16,
                  }
                }
              >
                Every relationship starts with a name. What's yours?
              </Text>
            </View>
            <View
              horizontal={false}
              style={
                Object {
                  "paddingHorizontal": 0,
                  "paddingVertical": 16,
                }
              }
            >
              <View
                disabled={true}
                style={
                  Object {
                    "marginVertical": 16,
                    "opacity": 0.5,
                  }
                }
              >
                <View>
                  <View
                    style={
                      Object {
                        "flexDirection": "row",
                        "justifyContent": "center",
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "alignItems": "center",
                          "justifyContent": "center",
                        }
                      }
                    />
                    <View
                      style={
                        Object {
                          "flex": 1,
                          "opacity": 0,
                        }
                      }
                    >
                      <TextInput
                        allowFontScaling={true}
                        editable={false}
                        enablesReturnKeyAutomatically={true}
                        onBlur={[Function]}
                        onChangeText={[Function]}
                        onFocus={[Function]}
                        onSubmitEditing={[Function]}
                        placeholderTextColor="rgba(48, 48, 48, 0.6)"
                        returnKeyType="next"
                        style={
                          Object {
                            "color": "#303030",
                            "fontFamily": "Colfax-Bold",
                            "fontSize": 14,
                            "height": 38,
                            "paddingVertical": 0,
                          }
                        }
                        textContentType="givenName"
                        type="text"
                        underlineColorAndroid="transparent"
                      />
                    </View>
                    <View
                      style={
                        Object {
                          "alignItems": "center",
                          "justifyContent": "center",
                        }
                      }
                    />
                  </View>
                  <View
                    onLayout={[Function]}
                    pointerEvents="none"
                    style={
                      Object {
                        "bottom": 0,
                        "justifyContent": "center",
                        "opacity": 1,
                        "position": "absolute",
                        "top": 0,
                        "transform": Array [
                          Object {
                            "scale": 1,
                          },
                          Object {
                            "translateX": 0,
                          },
                          Object {
                            "translateY": 0,
                          },
                        ],
                      }
                    }
                  >
                    <Text
                      style={
                        Object {
                          "backgroundColor": "transparent",
                          "color": "#505050",
                          "fontFamily": "Colfax-Bold",
                          "fontSize": 12,
                          "lineHeight": 17.28,
                          "paddingVertical": 4,
                        }
                      }
                    >
                      First Name
                    </Text>
                  </View>
                  <View
                    style={
                      Object {
                        "bottom": 0,
                        "left": 0,
                        "right": 0,
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "backgroundColor": "#dddddd",
                          "bottom": -0.5,
                          "height": 0.5,
                        }
                      }
                    />
                    <View
                      style={
                        Object {
                          "bottom": 0,
                          "left": 0,
                          "right": 0,
                          "transform": Array [
                            Object {
                              "scaleX": 0.0001,
                            },
                          ],
                        }
                      }
                    >
                      <View
                        hasError={false}
                        style={
                          Object {
                            "backgroundColor": "#6bac43",
                            "bottom": 0,
                            "height": 0.5,
                          }
                        }
                      />
                    </View>
                  </View>
                </View>
              </View>
              <View
                disabled={true}
                style={
                  Object {
                    "marginVertical": 16,
                    "opacity": 0.5,
                  }
                }
              >
                <View>
                  <View
                    style={
                      Object {
                        "flexDirection": "row",
                        "justifyContent": "center",
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "alignItems": "center",
                          "justifyContent": "center",
                        }
                      }
                    />
                    <View
                      style={
                        Object {
                          "flex": 1,
                          "opacity": 0,
                        }
                      }
                    >
                      <TextInput
                        allowFontScaling={true}
                        editable={false}
                        enablesReturnKeyAutomatically={true}
                        onBlur={[Function]}
                        onChangeText={[Function]}
                        onFocus={[Function]}
                        onSubmitEditing={[Function]}
                        placeholderTextColor="rgba(48, 48, 48, 0.6)"
                        returnKeyType="next"
                        style={
                          Object {
                            "color": "#303030",
                            "fontFamily": "Colfax-Bold",
                            "fontSize": 14,
                            "height": 38,
                            "paddingVertical": 0,
                          }
                        }
                        textContentType="familyName"
                        type="text"
                        underlineColorAndroid="transparent"
                      />
                    </View>
                    <View
                      style={
                        Object {
                          "alignItems": "center",
                          "justifyContent": "center",
                        }
                      }
                    />
                  </View>
                  <View
                    onLayout={[Function]}
                    pointerEvents="none"
                    style={
                      Object {
                        "bottom": 0,
                        "justifyContent": "center",
                        "opacity": 1,
                        "position": "absolute",
                        "top": 0,
                        "transform": Array [
                          Object {
                            "scale": 1,
                          },
                          Object {
                            "translateX": 0,
                          },
                          Object {
                            "translateY": 0,
                          },
                        ],
                      }
                    }
                  >
                    <Text
                      style={
                        Object {
                          "backgroundColor": "transparent",
                          "color": "#505050",
                          "fontFamily": "Colfax-Bold",
                          "fontSize": 12,
                          "lineHeight": 17.28,
                          "paddingVertical": 4,
                        }
                      }
                    >
                      Last Name
                    </Text>
                  </View>
                  <View
                    style={
                      Object {
                        "bottom": 0,
                        "left": 0,
                        "right": 0,
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "backgroundColor": "#dddddd",
                          "bottom": -0.5,
                          "height": 0.5,
                        }
                      }
                    />
                    <View
                      style={
                        Object {
                          "bottom": 0,
                          "left": 0,
                          "right": 0,
                          "transform": Array [
                            Object {
                              "scaleX": 0.0001,
                            },
                          ],
                        }
                      }
                    >
                      <View
                        hasError={false}
                        style={
                          Object {
                            "backgroundColor": "#6bac43",
                            "bottom": 0,
                            "height": 0.5,
                          }
                        }
                      />
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </RCTSafeAreaView>
        </RCTSafeAreaView>
      </View>
    </RCTScrollView>
    <View
      style={
        Object {
          "alignItems": "center",
          "bottom": 0,
          "flexDirection": "row-reverse",
          "justifyContent": "space-between",
          "left": 0,
          "marginVertical": 8,
          "paddingHorizontal": 16,
          "paddingVertical": 0,
          "position": "absolute",
          "right": 0,
        }
      }
      vertical={false}
    >
      <RCTSafeAreaView
        emulateUnlessSupported={true}
        forceInset={
          Object {
            "bottom": "always",
            "top": "never",
          }
        }
      >
        <View
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
        >
          <View
            bordered={false}
            disabled={false}
            pill={true}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#6bac43",
                "borderColor": "#6bac43",
                "borderRadius": 48,
                "borderWidth": 2,
                "elevation": 2,
                "flexDirection": "row",
                "height": 48,
                "justifyContent": "center",
                "opacity": 1,
                "overflow": "hidden",
                "paddingHorizontal": 16,
              }
            }
          >
            <ActivityIndicator
              animating={true}
              color="#ffffff"
              hidesWhenStopped={true}
              size="small"
            />
          </View>
        </View>
        <Text
          onPress={[MockFunction]}
          style={
            Object {
              "color": "#858585",
              "marginLeft": -16,
              "paddingHorizontal": 16,
              "paddingVertical": 15,
            }
          }
        >
          Skip
        </Text>
      </RCTSafeAreaView>
    </View>
  </View>
</RCTSafeAreaView>
`;
