// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`The Onboarding Slide component should render a custom icon 1`] = `
<RCTSafeAreaView
  emulateUnlessSupported={true}
  onLayout={[Function]}
  style={
    Object {
      "bottom": 0,
      "left": 0,
      "position": "absolute",
      "right": 0,
      "top": 0,
    }
  }
>
  <View
    onLayout={[Function]}
    style={
      Object {
        "flex": 1,
      }
    }
  />
  <View
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <RCTSafeAreaView
      emulateUnlessSupported={true}
      forceInset={
        Object {
          "bottom": "always",
        }
      }
      style={
        Object {
          "marginBottom": 48,
          "paddingHorizontal": 16,
          "paddingTop": 16,
        }
      }
    >
      <View>
        <View
          style={
            Object {
              "paddingBottom": 16,
            }
          }
        >
          <RNSVGSvgView
            align="xMidYMid"
            bbHeight={48}
            bbWidth={48}
            height={48}
            icon="umbrella"
            meetOrSlice={0}
            minX={0}
            minY={0}
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                  "borderWidth": 0,
                },
                undefined,
                null,
                Object {
                  "flex": 0,
                  "height": 48,
                  "width": 48,
                },
              ]
            }
            vbHeight={24}
            vbWidth={24}
            width={48}
          >
            <RNSVGGroup
              fill={
                Array [
                  0,
                  4278190080,
                ]
              }
              fillOpacity={1}
              fillRule={1}
              font={Object {}}
              matrix={
                Array [
                  1,
                  0,
                  0,
                  1,
                  0,
                  0,
                ]
              }
              opacity={1}
              originX={0}
              originY={0}
              propList={
                Array [
                  "fill",
                  "fillOpacity",
                  "fillRule",
                  "stroke",
                  "strokeWidth",
                  "strokeOpacity",
                  "strokeDasharray",
                  "strokeDashoffset",
                  "strokeLinecap",
                  "strokeLinejoin",
                  "strokeMiterlimit",
                ]
              }
              rotation={0}
              scaleX={1}
              scaleY={1}
              skewX={0}
              skewY={0}
              stroke={null}
              strokeDasharray={null}
              strokeDashoffset={null}
              strokeLinecap={0}
              strokeLinejoin={0}
              strokeMiterlimit={4}
              strokeOpacity={1}
              strokeWidth={1}
              x={0}
              y={0}
            >
              <RNSVGPath
                d="M12 22C5.2 22 2 17.52 2 12S6.48 2 12 2s10 3.33 10 10v10H12zM7.84 8v9.08h3.12V12.3c0-1.14.6-1.8 1.63-1.8.53 0 1.03.27 1.23.68.17.33.2.5.2 1.4v4.5h3.1v-5.65c0-1.2-.2-1.82-.8-2.45C15.7 8.33 14.86 8 13.8 8H7.84z"
                fill={
                  Array [
                    0,
                    4285246531,
                  ]
                }
                fillOpacity={1}
                fillRule={1}
                matrix={
                  Array [
                    1,
                    0,
                    0,
                    1,
                    0,
                    0,
                  ]
                }
                opacity={1}
                originX={0}
                originY={0}
                propList={
                  Array [
                    "fill",
                  ]
                }
                rotation={0}
                scaleX={1}
                scaleY={1}
                skewX={0}
                skewY={0}
                stroke={null}
                strokeDasharray={null}
                strokeDashoffset={null}
                strokeLinecap={0}
                strokeLinejoin={0}
                strokeMiterlimit={4}
                strokeOpacity={1}
                strokeWidth={1}
                x={0}
                y={0}
              />
            </RNSVGGroup>
          </RNSVGSvgView>
        </View>
        <View
          style={
            Object {
              "paddingBottom": 8,
            }
          }
        >
          <Text
            style={
              Object {
                "color": "#6bac43",
                "fontFamily": "Colfax-Black",
                "fontSize": 36,
                "lineHeight": 41.4,
              }
            }
          />
        </View>
        <Text
          style={
            Object {
              "color": "#505050",
              "fontFamily": "Colfax-Medium",
              "fontSize": 14,
              "lineHeight": 20.16,
            }
          }
        />
      </View>
    </RCTSafeAreaView>
  </View>
</RCTSafeAreaView>
`;

exports[`The Onboarding Slide component should render a description 1`] = `
<RCTSafeAreaView
  emulateUnlessSupported={true}
  onLayout={[Function]}
  style={
    Object {
      "bottom": 0,
      "left": 0,
      "position": "absolute",
      "right": 0,
      "top": 0,
    }
  }
>
  <View
    onLayout={[Function]}
    style={
      Object {
        "flex": 1,
      }
    }
  />
  <View
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <RCTSafeAreaView
      emulateUnlessSupported={true}
      forceInset={
        Object {
          "bottom": "always",
        }
      }
      style={
        Object {
          "marginBottom": 48,
          "paddingHorizontal": 16,
          "paddingTop": 16,
        }
      }
    >
      <View>
        <View
          style={
            Object {
              "paddingBottom": 8,
            }
          }
        >
          <Text
            style={
              Object {
                "color": "#6bac43",
                "fontFamily": "Colfax-Black",
                "fontSize": 36,
                "lineHeight": 41.4,
              }
            }
          />
        </View>
        <Text
          style={
            Object {
              "color": "#505050",
              "fontFamily": "Colfax-Medium",
              "fontSize": 14,
              "lineHeight": 20.16,
            }
          }
        >
          There's that word again: "heavy." Why are things so heavy in the future? Is there a problem with the Earth's gravitational pull?
        </Text>
      </View>
    </RCTSafeAreaView>
  </View>
</RCTSafeAreaView>
`;

exports[`The Onboarding Slide component should render a loading state 1`] = `
<RCTSafeAreaView
  emulateUnlessSupported={true}
  onLayout={[Function]}
  style={
    Object {
      "bottom": 0,
      "left": 0,
      "position": "absolute",
      "right": 0,
      "top": 0,
    }
  }
>
  <View
    onLayout={[Function]}
    style={
      Object {
        "flex": 1,
      }
    }
  />
  <View
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <RCTSafeAreaView
      emulateUnlessSupported={true}
      forceInset={
        Object {
          "bottom": "always",
        }
      }
      style={
        Object {
          "marginBottom": 48,
          "paddingHorizontal": 16,
          "paddingTop": 16,
        }
      }
    >
      <View>
        <View
          style={
            Object {
              "paddingBottom": 16,
            }
          }
        >
          <View
            style={
              Object {
                "backgroundColor": "#dddddd",
                "borderRadius": 16,
                "height": 48,
                "width": 48,
              }
            }
          />
        </View>
        <View
          style={
            Object {
              "paddingBottom": 8,
            }
          }
        >
          <View
            style={
              Object {
                "alignSelf": "stretch",
                "backgroundColor": "#dddddd",
                "borderRadius": 16,
                "height": 36,
                "marginVertical": 2.6999999999999993,
                "width": "100%",
              }
            }
          />
        </View>
        <View
          style={
            Object {
              "alignSelf": "stretch",
              "backgroundColor": "#dddddd",
              "borderRadius": 16,
              "height": 14,
              "marginVertical": 3.08,
              "width": "60%",
            }
          }
        />
      </View>
    </RCTSafeAreaView>
  </View>
</RCTSafeAreaView>
`;

exports[`The Onboarding Slide component should render a title 1`] = `
<RCTSafeAreaView
  emulateUnlessSupported={true}
  onLayout={[Function]}
  style={
    Object {
      "bottom": 0,
      "left": 0,
      "position": "absolute",
      "right": 0,
      "top": 0,
    }
  }
>
  <View
    onLayout={[Function]}
    style={
      Object {
        "flex": 1,
      }
    }
  />
  <View
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <RCTSafeAreaView
      emulateUnlessSupported={true}
      forceInset={
        Object {
          "bottom": "always",
        }
      }
      style={
        Object {
          "marginBottom": 48,
          "paddingHorizontal": 16,
          "paddingTop": 16,
        }
      }
    >
      <View>
        <View
          style={
            Object {
              "paddingBottom": 8,
            }
          }
        >
          <Text
            style={
              Object {
                "color": "#6bac43",
                "fontFamily": "Colfax-Black",
                "fontSize": 36,
                "lineHeight": 41.4,
              }
            }
          >
            Whoa, this is heavy
          </Text>
        </View>
        <Text
          style={
            Object {
              "color": "#505050",
              "fontFamily": "Colfax-Medium",
              "fontSize": 14,
              "lineHeight": 20.16,
            }
          }
        />
      </View>
    </RCTSafeAreaView>
  </View>
</RCTSafeAreaView>
`;

exports[`The Onboarding Slide component should render accept additionall props 1`] = `
<RCTSafeAreaView
  emulateUnlessSupported={true}
  onLayout={[Function]}
  style={
    Object {
      "bottom": 0,
      "left": 0,
      "position": "absolute",
      "right": 0,
      "top": 0,
    }
  }
>
  <View
    onLayout={[Function]}
    style={
      Object {
        "flex": 1,
      }
    }
  />
  <View
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <RCTSafeAreaView
      emulateUnlessSupported={true}
      forceInset={
        Object {
          "bottom": "always",
        }
      }
      style={
        Object {
          "flex": 1,
          "justifyContent": "center",
          "marginBottom": 48,
          "paddingHorizontal": 16,
          "paddingTop": 16,
        }
      }
    >
      <View>
        <View
          style={
            Object {
              "paddingBottom": 8,
            }
          }
        >
          <Text
            style={
              Object {
                "color": "#6bac43",
                "fontFamily": "Colfax-Black",
                "fontSize": 36,
                "lineHeight": 41.4,
              }
            }
          />
        </View>
        <Text
          style={
            Object {
              "color": "#505050",
              "fontFamily": "Colfax-Medium",
              "fontSize": 14,
              "lineHeight": 20.16,
            }
          }
        />
      </View>
      <Text>
        Great Scott!
      </Text>
    </RCTSafeAreaView>
  </View>
</RCTSafeAreaView>
`;

exports[`The Onboarding Slide component should render an icon 1`] = `
<RCTSafeAreaView
  emulateUnlessSupported={true}
  onLayout={[Function]}
  style={
    Object {
      "bottom": 0,
      "left": 0,
      "position": "absolute",
      "right": 0,
      "top": 0,
    }
  }
>
  <View
    onLayout={[Function]}
    style={
      Object {
        "flex": 1,
      }
    }
  />
  <View
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <RCTSafeAreaView
      emulateUnlessSupported={true}
      forceInset={
        Object {
          "bottom": "always",
        }
      }
      style={
        Object {
          "marginBottom": 48,
          "paddingHorizontal": 16,
          "paddingTop": 16,
        }
      }
    >
      <View>
        <View
          style={
            Object {
              "paddingBottom": 16,
            }
          }
        >
          <RNSVGSvgView
            align="xMidYMid"
            bbHeight={48}
            bbWidth={48}
            height={48}
            icon={true}
            meetOrSlice={0}
            minX={0}
            minY={0}
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                  "borderWidth": 0,
                },
                undefined,
                null,
                Object {
                  "flex": 0,
                  "height": 48,
                  "width": 48,
                },
              ]
            }
            vbHeight={24}
            vbWidth={24}
            width={48}
          >
            <RNSVGGroup
              fill={
                Array [
                  0,
                  4278190080,
                ]
              }
              fillOpacity={1}
              fillRule={1}
              font={Object {}}
              matrix={
                Array [
                  1,
                  0,
                  0,
                  1,
                  0,
                  0,
                ]
              }
              opacity={1}
              originX={0}
              originY={0}
              propList={
                Array [
                  "fill",
                  "fillOpacity",
                  "fillRule",
                  "stroke",
                  "strokeWidth",
                  "strokeOpacity",
                  "strokeDasharray",
                  "strokeDashoffset",
                  "strokeLinecap",
                  "strokeLinejoin",
                  "strokeMiterlimit",
                ]
              }
              rotation={0}
              scaleX={1}
              scaleY={1}
              skewX={0}
              skewY={0}
              stroke={null}
              strokeDasharray={null}
              strokeDashoffset={null}
              strokeLinecap={0}
              strokeLinejoin={0}
              strokeMiterlimit={4}
              strokeOpacity={1}
              strokeWidth={1}
              x={0}
              y={0}
            >
              <RNSVGPath
                d="M12 22C5.2 22 2 17.52 2 12S6.48 2 12 2s10 3.33 10 10v10H12zM7.84 8v9.08h3.12V12.3c0-1.14.6-1.8 1.63-1.8.53 0 1.03.27 1.23.68.17.33.2.5.2 1.4v4.5h3.1v-5.65c0-1.2-.2-1.82-.8-2.45C15.7 8.33 14.86 8 13.8 8H7.84z"
                fill={
                  Array [
                    0,
                    4285246531,
                  ]
                }
                fillOpacity={1}
                fillRule={1}
                matrix={
                  Array [
                    1,
                    0,
                    0,
                    1,
                    0,
                    0,
                  ]
                }
                opacity={1}
                originX={0}
                originY={0}
                propList={
                  Array [
                    "fill",
                  ]
                }
                rotation={0}
                scaleX={1}
                scaleY={1}
                skewX={0}
                skewY={0}
                stroke={null}
                strokeDasharray={null}
                strokeDashoffset={null}
                strokeLinecap={0}
                strokeLinejoin={0}
                strokeMiterlimit={4}
                strokeOpacity={1}
                strokeWidth={1}
                x={0}
                y={0}
              />
            </RNSVGGroup>
          </RNSVGSvgView>
        </View>
        <View
          style={
            Object {
              "paddingBottom": 8,
            }
          }
        >
          <Text
            style={
              Object {
                "color": "#6bac43",
                "fontFamily": "Colfax-Black",
                "fontSize": 36,
                "lineHeight": 41.4,
              }
            }
          />
        </View>
        <Text
          style={
            Object {
              "color": "#505050",
              "fontFamily": "Colfax-Medium",
              "fontSize": 14,
              "lineHeight": 20.16,
            }
          }
        />
      </View>
    </RCTSafeAreaView>
  </View>
</RCTSafeAreaView>
`;

exports[`The Onboarding Slide component should render children alone 1`] = `
<RCTSafeAreaView
  emulateUnlessSupported={true}
  onLayout={[Function]}
  style={
    Object {
      "bottom": 0,
      "left": 0,
      "position": "absolute",
      "right": 0,
      "top": 0,
    }
  }
>
  <View
    onLayout={[Function]}
    style={
      Object {
        "flex": 1,
      }
    }
  />
  <View
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <RCTSafeAreaView
      emulateUnlessSupported={true}
      forceInset={
        Object {
          "bottom": "always",
        }
      }
      style={
        Object {
          "marginBottom": 48,
          "paddingHorizontal": 16,
          "paddingTop": 16,
        }
      }
    >
      <View>
        <View
          style={
            Object {
              "paddingBottom": 8,
            }
          }
        >
          <Text
            style={
              Object {
                "color": "#6bac43",
                "fontFamily": "Colfax-Black",
                "fontSize": 36,
                "lineHeight": 41.4,
              }
            }
          />
        </View>
        <Text
          style={
            Object {
              "color": "#505050",
              "fontFamily": "Colfax-Medium",
              "fontSize": 14,
              "lineHeight": 20.16,
            }
          }
        />
      </View>
      <Text>
        Great Scott!
      </Text>
    </RCTSafeAreaView>
  </View>
</RCTSafeAreaView>
`;

exports[`The Onboarding Slide component should render with children 1`] = `
<RCTSafeAreaView
  emulateUnlessSupported={true}
  onLayout={[Function]}
  style={
    Object {
      "bottom": 0,
      "left": 0,
      "position": "absolute",
      "right": 0,
      "top": 0,
    }
  }
>
  <View
    onLayout={[Function]}
    style={
      Object {
        "flex": 1,
      }
    }
  />
  <View
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <RCTSafeAreaView
      emulateUnlessSupported={true}
      forceInset={
        Object {
          "bottom": "always",
        }
      }
      style={
        Object {
          "marginBottom": 48,
          "paddingHorizontal": 16,
          "paddingTop": 16,
        }
      }
    >
      <View>
        <View
          style={
            Object {
              "paddingBottom": 8,
            }
          }
        >
          <Text
            style={
              Object {
                "color": "#6bac43",
                "fontFamily": "Colfax-Black",
                "fontSize": 36,
                "lineHeight": 41.4,
              }
            }
          >
            Whoa, this is heavy
          </Text>
        </View>
        <Text
          style={
            Object {
              "color": "#505050",
              "fontFamily": "Colfax-Medium",
              "fontSize": 14,
              "lineHeight": 20.16,
            }
          }
        >
          There's that word again: "heavy." Why are things so heavy in the future? Is there a problem with the Earth's gravitational pull?
        </Text>
      </View>
      <Text>
        Great Scott!
      </Text>
    </RCTSafeAreaView>
  </View>
</RCTSafeAreaView>
`;
